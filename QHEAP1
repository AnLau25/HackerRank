#include <cmath>
#include <sstream>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>

using namespace std;

class Heap{
    private:
        vector<int> arr;
        int size = 0;

        void heapify (int i);

    public:
        Heap() = default;
        Heap(int capacity) : arr(capacity){}

        void insert(int key){
            arr.push_back(key);
            size++;

            int idx = size-1;

            while (idx!=0 && key>arr[(idx-1)/2])
            {
                swap(arr[(idx-1)/2], arr[idx]);
                idx = (idx-1)/2;
            }

        }

        void remove(int key);

        void getMin(){
            cout<<arr.back();
        }

        
};

int main() {
    /* Enter your code here. Read input from STDIN. Print output to STDOUT */

    //Stack* stacked = new Stack();
    
    vector<vector<int>> cmds;
    
    int counter = 0;
    std::cin >> counter;
    std::cin.ignore();//Makes sure cin ignores next line (since it's getline) 

    while(counter-->0)
    {   
        std::string line;
        std::getline(std::cin, line); //Takes a full line of code
        std::istringstream iss(line);

        vector<int> com;
        int val;

        while (iss>>val){//Pushes the input into command
            com.push_back(val);
        }

        cmds.push_back(com);//Com to commands
    }

    for(vector<int> com : cmds)//Exhecutes the commands
    {
        if (com[0]==1){
            //stacked->enqueue(com[1]);
        }else if (com[0]==2){
            //stacked->dequeue();
        }else if (com[0]==3){
            //stacked->print();
        }   
    }
    
    
       
    return 0;
}
